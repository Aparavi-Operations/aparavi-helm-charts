image:
  repository: aparavi.jfrog.io/public-app/app
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets:
  []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations:
    {}
  name: ""

aggregator:
  enabled: false
  config:
    platform:
      host: ""  # HOSTNAME:PORT
      nodeId: ""
    # If left empty, will default to .Release.Name-aggregator
    nodeName: ""
    mysql:
      username: root
      password: aparavi
  extraVolumes:
    []
    # - name: extras
    #   emptyDir: {}
  extraVolumeMounts:
    []
    # - name: extras
    #   mountPath: /usr/share/extras
    #   readOnly: true
  initContainers:
    []
    # - name: do-something
    #   image: busybox
    #   command: ['do', 'something']
  service:
    type: ClusterIP
    netPort: 9545
    httpPort: 9552
  podAnnotations:
    {}
  podSecurityContext:
    {}
    # fsGroup: 2000
  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  resources:
    {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  nodeSelector:
    {}
  # affinity: {}
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                    - collector
            topologyKey: kubernetes.io/hostname
  tolerations:
    []

collector:
  enabled: false
  config:
    aggregatorHost: ""  # HOSTNAME:PORT
    # If left empty, will default to .Release.Name-collector
    nodeName: ""
  extraVolumes:
    []
    # - name: extras
    #   emptyDir: {}
  extraVolumeMounts:
    []
    # - name: extras
    #   mountPath: /usr/share/extras
    #   readOnly: true
  initContainers:
    []
    # - name: do-something
    #   image: busybox
    #   command: ['do', 'something']
  service:
    type: ClusterIP
    netPort: 9645
    httpPort: 9652
  podAnnotations:
    {}
  podSecurityContext:
    {}
    # fsGroup: 2000
  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  resources:
    {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  nodeSelector:
    {}
  # affinity: {}
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                    - aggregator
            topologyKey: kubernetes.io/hostname
  tolerations:
    []

appagent:
  enabled: true
  config:
    platform:
      host: ""  # HOSTNAME:PORT
      nodeId: ""
    # If left empty, will default to .Release.Name-aggregator
    nodeName: ""
    mysql:
      username: root
      password: aparavi
  extraVolumes:
    []
    # - name: extras
    #   emptyDir: {}
  extraVolumeMounts:
    []
    # - name: extras
    #   mountPath: /usr/share/extras
    #   readOnly: true
  initContainers:
    []
    # - name: do-something
    #   image: busybox
    #   command: ['do', 'something']
  service:
    type: ClusterIP
    netPort: 9745
    httpPort: 9752
  podAnnotations:
    {}
  podSecurityContext:
    {}
    # fsGroup: 2000
  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  resources:
    {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  nodeSelector:
    {}
  affinity: {}
  tolerations:
    []

worker:
  enabled: false
  config:
    appagentHost: "" # HOSTNAME:PORT (example: "aparavi-appagent:9745" or "aparavi-appagent.default.svc.cluster.local:9745")
    # If left empty, will default to .Release.Name-worker
    nodeName: ""
    # Number of concurrently running workers
    replicas: 1
  extraVolumes:
    []
    # - name: extras
    #   emptyDir: {}
  extraVolumeMounts:
    []
    # - name: extras
    #   mountPath: /usr/share/extras
    #   readOnly: true
  initContainers:
    []
    # - name: do-something
    #   image: busybox
    #   command: ['do', 'something']
  service:
    type: ClusterIP
    httpPort: 9852
  podAnnotations:
    {}
  podSecurityContext:
    {}
    # fsGroup: 2000
  securityContext:
    {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  resources:
    {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi
  nodeSelector:
    {}
  # affinity: {}
  affinity: {}
  tolerations:
    []

mysql:
  enabled: true # For worker false
  architecture: standalone
  auth:
    rootPassword: aparavi
  primary:
    service:
      port: 3306

externalMysql:
  hostname: mysql
  port: 3306
